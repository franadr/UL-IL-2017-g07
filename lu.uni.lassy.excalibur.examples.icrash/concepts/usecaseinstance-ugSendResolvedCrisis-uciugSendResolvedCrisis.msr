package concepts.uciugSendResolvedCrisis {
	import icrash.usecases.ugSendResolvedCrisis
	import icrash.usecases.subfunctions
	import icrash.environment

	Use Case Model {

	use case instance uciugSendResolvedCrisis : ugSendResolvedCrisis{
		actors {
			bill : actCoordinator
			chl : actHospital
			}
			use case steps {
				chl
				executed instanceof subfunction
				icrash.usecases.subfunctions.oeResolved("1"){
					ieMessage("The status of the crisis has been sent") returned to chl
				}
				bill
				executed instanceof subfunction
				icrash.usecases.subfunctions.oeCloseCrisis("1"){
					ieMessage("Crisis #1 has been closed") returned to bill
				}
				bill
				executed instanceof subfunction
				icrash.usecases.subfunctions.oeInvalidateAlert("1"){
					ieMessage("Alert #1 has been invalidated") returned to bill
				}
				bill
				executed instanceof subfunction
				icrash.usecases.subfunctions.oeInvalidateAlert("2"){
					ieMessage("Alert #1 has been invalidated") returned to bill
				}
				
			}
		}
	}
}
